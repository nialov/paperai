name: test-and-publish

on:
  # run on all pushes to any branch
  push:
  # run only on master pull requests
  pull_request:
    branches: [master]
  # also run periodically
  schedule:
    - cron: "41 7 * * 5"

jobs:
  pytest-coverage:
    name: Test and check coverage of 🐍 code
    strategy:
      matrix:
        python-version: [3.8, 3.9]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox invoke
      - name: Cache .nox
        uses: actions/cache@v2
        with:
          path: .nox
          key: ${{ runner.os }}-${{ matrix.python-version }}-nox-${{ hashFiles('noxfile.py') }}-${{ hashFiles('poetry.lock') }}-ci-test
      - name: Test with invoke -> nox -> pytest
        run: invoke ci-test --python ${{ matrix.python-version }}

  format-lint:
    runs-on: ubuntu-latest
    name: Format and lint 🐍 code
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 🐍 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nox invoke
      - name: Cache .nox
        uses: actions/cache@v2
        with:
          path: .nox
          key: ${{ runner.os }}-nox-${{ hashFiles('noxfile.py') }}-${{ hashFiles('poetry.lock') }}-format-and-lint
      - name: Lint with invoke -> nox -> linters
        run: invoke format-and-lint
